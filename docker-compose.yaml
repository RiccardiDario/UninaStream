version: "3.9"
services:
  keycloak:
    build:
      context: ./keycloak
      dockerfile: Dockerfile
    image: gcr.io/uninastream/keycloak
    env_file:
      - keycloak/.env
    expose:
      - "8080"
    restart: always
    command: start-dev
    networks:
      mynetwork:
        ipv4_address: 172.20.0.3

  user-manager:
    build:
      context: ./nodejs/user-manager
      dockerfile: Dockerfile
    image: gcr.io/uninastream/user-manager
    env_file:
      - nodejs/user-manager/.env
    expose:
      - "5000"
    # volumes:
    #   - ./nodejs/user-manager:/user-manager
    extra_hosts:
      - "auth.uninastream.ddnsfree.com:172.20.0.2"
    restart: always
    networks:
      mynetwork:
        ipv4_address: 172.20.0.4
        
  video-manager:
    build:
      context: ./nodejs/video-manager
      dockerfile: Dockerfile
    image: gcr.io/uninastream/video-manager
    env_file:
      - nodejs/video-manager/.env
    expose:
      - "5000"
    # volumes:
    #   - ./nodejs/video-manager:/video-manager
    extra_hosts:
      - "auth.uninastream.ddnsfree.com:172.20.0.2"
    restart: always
    networks:
      mynetwork:
        ipv4_address: 172.20.0.5

  vault:
    build:
      context: ./vault
      dockerfile: Dockerfile
    image: gcr.io/uninastream/vault
    env_file:
      - vault/.env
    cap_add:
      - IPC_LOCK
    expose:
      - "8200"
    # volumes:
    #   - ./vault/file:/vault/file
    restart: always
    command: server
    networks:
      mynetwork:
        ipv4_address: 172.20.0.6

  nginx:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      mynetwork:
        ipv4_address: 172.20.0.2
    
networks:
  mynetwork:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
